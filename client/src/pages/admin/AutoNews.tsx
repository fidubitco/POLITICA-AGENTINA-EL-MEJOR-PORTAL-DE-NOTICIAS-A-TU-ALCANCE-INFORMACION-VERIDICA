import { useState, useEffect } from 'react';
import { BBCHeader } from '../../components/BBCHeader';
import { MegaSEO } from '../../components/MegaSEO';
import { 
  Zap, 
  RefreshCw, 
  Check, 
  X,
  Clock,
  Newspaper,
  TrendingUp,
  Globe,
  Play,
  Pause,
  Settings
} from 'lucide-react';
import { Link } from 'wouter';
import '../../styles/bbc-style.css';

interface NewsSource {
  id: string;
  name: string;
  url: string;
  enabled: boolean;
  lastSync: string;
  articlesFound: number;
}

interface AutoGeneratedNews {
  id: string;
  title: string;
  source: string;
  category: string;
  status: 'pending' | 'approved' | 'rejected';
  createdAt: string;
}

export const AutoNews = () => {
  const [isRunning, setIsRunning] = useState(false);
  const [sources, setSources] = useState<NewsSource[]>([
    {
      id: '1',
      name: 'Clarín',
      url: 'https://www.clarin.com',
      enabled: true,
      lastSync: '2025-10-26T10:30:00',
      articlesFound: 15,
    },
    {
      id: '2',
      name: 'La Nación',
      url: 'https://www.lanacion.com.ar',
      enabled: true,
      lastSync: '2025-10-26T10:25:00',
      articlesFound: 12,
    },
    {
      id: '3',
      name: 'Página/12',
      url: 'https://www.pagina12.com.ar',
      enabled: true,
      lastSync: '2025-10-26T10:20:00',
      articlesFound: 8,
    },
    {
      id: '4',
      name: 'Infobae',
      url: 'https://www.infobae.com',
      enabled: true,
      lastSync: '2025-10-26T10:15:00',
      articlesFound: 20,
    },
    {
      id: '5',
      name: 'Ámbito',
      url: 'https://www.ambito.com',
      enabled: false,
      lastSync: '2025-10-26T09:00:00',
      articlesFound: 5,
    },
  ]);

  const [generatedNews, setGeneratedNews] = useState<AutoGeneratedNews[]>([
    {
      id: '1',
      title: 'Banco Central aumenta tasa de interés al 120%',
      source: 'Clarín',
      category: 'Economía',
      status: 'pending',
      createdAt: '2025-10-26T10:30:00',
    },
    {
      id: '2',
      title: 'Congreso debate proyecto de reforma judicial',
      source: 'La Nación',
      category: 'Política',
      status: 'pending',
      createdAt: '2025-10-26T10:25:00',
    },
    {
      id: '3',
      title: 'Récord de turismo en la temporada de verano',
      source: 'Infobae',
      category: 'Sociedad',
      status: 'approved',
      createdAt: '2025-10-26T10:20:00',
    },
  ]);

  const [stats, setStats] = useState({
    totalSources: 5,
    activeSources: 4,
    articlesGenerated: 55,
    articlesApproved: 32,
    lastSync: '2025-10-26T10:30:00',
  });

  const toggleSource = (id: string) => {
    setSources(sources.map(source => 
      source.id === id ? { ...source, enabled: !source.enabled } : source
    ));
  };

  const syncNow = async () => {
    setIsRunning(true);
    // Simular sincronización
    await new Promise(resolve => setTimeout(resolve, 3000));
    setIsRunning(false);
    
    // Actualizar stats
    setStats({
      ...stats,
      articlesGenerated: stats.articlesGenerated + Math.floor(Math.random() * 10) + 5,
      lastSync: new Date().toISOString(),
    });
  };

  const approveNews = (id: string) => {
    setGeneratedNews(generatedNews.map(news =>
      news.id === id ? { ...news, status: 'approved' as const } : news
    ));
    setStats({ ...stats, articlesApproved: stats.articlesApproved + 1 });
  };

  const rejectNews = (id: string) => {
    setGeneratedNews(generatedNews.map(news =>
      news.id === id ? { ...news, status: 'rejected' as const } : news
    ));
  };

  const formatTime = (dateString: string) => {
    const date = new Date(dateString);
    const now = new Date();
    const diffInMinutes = Math.floor((now.getTime() - date.getTime()) / (1000 * 60));
    
    if (diffInMinutes < 1) return 'Hace menos de 1 minuto';
    if (diffInMinutes < 60) return `Hace ${diffInMinutes} minutos`;
    if (diffInMinutes < 1440) return `Hace ${Math.floor(diffInMinutes / 60)} horas`;
    return date.toLocaleDateString('es-AR');
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <MegaSEO
        title="Auto Noticias - Sistema Automático"
        description="Sistema de creación automática de noticias desde fuentes externas"
        url="https://politicaargentina.com/admin/auto-noticias"
      />
      <BBCHeader />

      <div className="container-bbc py-8">
        {/* Header */}
        <div className="mb-8">
          <div className="flex items-center justify-between">
            <div>
              <h1 className="text-4xl font-bold text-[#1a1a1a] mb-2 flex items-center gap-3">
                <Zap className="text-[#bb1919]" size={40} />
                Sistema de Auto Noticias
              </h1>
              <p className="text-gray-600">Generación automática de noticias desde fuentes confiables</p>
            </div>
            <Link href="/admin/dashboard">
              <a className="px-4 py-2 bg-gray-200 text-gray-700 rounded hover:bg-gray-300 transition">
                ← Volver al Dashboard
              </a>
            </Link>
          </div>
        </div>

        {/* Stats Cards */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
          <div className="bg-white p-6 rounded-lg shadow-md">
            <div className="flex items-center justify-between mb-2">
              <Globe className="text-[#bb1919]" size={24} />
              <span className="text-2xl font-bold text-[#1a1a1a]">{stats.totalSources}</span>
            </div>
            <p className="text-gray-600 text-sm">Fuentes Totales</p>
          </div>

          <div className="bg-white p-6 rounded-lg shadow-md">
            <div className="flex items-center justify-between mb-2">
              <Check className="text-green-600" size={24} />
              <span className="text-2xl font-bold text-[#1a1a1a]">{stats.activeSources}</span>
            </div>
            <p className="text-gray-600 text-sm">Fuentes Activas</p>
          </div>

          <div className="bg-white p-6 rounded-lg shadow-md">
            <div className="flex items-center justify-between mb-2">
              <Newspaper className="text-blue-600" size={24} />
              <span className="text-2xl font-bold text-[#1a1a1a]">{stats.articlesGenerated}</span>
            </div>
            <p className="text-gray-600 text-sm">Noticias Generadas</p>
          </div>

          <div className="bg-white p-6 rounded-lg shadow-md">
            <div className="flex items-center justify-between mb-2">
              <TrendingUp className="text-purple-600" size={24} />
              <span className="text-2xl font-bold text-[#1a1a1a]">{stats.articlesApproved}</span>
            </div>
            <p className="text-gray-600 text-sm">Noticias Aprobadas</p>
          </div>
        </div>

        {/* Control Panel */}
        <div className="bg-white rounded-lg shadow-md p-6 mb-8">
          <div className="flex items-center justify-between">
            <div>
              <h2 className="text-xl font-bold text-[#1a1a1a] mb-2">Panel de Control</h2>
              <p className="text-sm text-gray-600">
                Última sincronización: {formatTime(stats.lastSync)}
              </p>
            </div>
            <div className="flex gap-3">
              <button
                onClick={syncNow}
                disabled={isRunning}
                className={`flex items-center gap-2 px-6 py-3 rounded-lg font-semibold transition ${
                  isRunning
                    ? 'bg-gray-300 text-gray-500 cursor-not-allowed'
                    : 'bg-[#bb1919] text-white hover:bg-[#990000]'
                }`}
              >
                <RefreshCw size={20} className={isRunning ? 'animate-spin' : ''} />
                {isRunning ? 'Sincronizando...' : 'Sincronizar Ahora'}
              </button>
              <button
                onClick={() => setIsRunning(!isRunning)}
                className={`flex items-center gap-2 px-6 py-3 rounded-lg font-semibold transition ${
                  isRunning
                    ? 'bg-red-600 text-white hover:bg-red-700'
                    : 'bg-green-600 text-white hover:bg-green-700'
                }`}
              >
                {isRunning ? <Pause size={20} /> : <Play size={20} />}
                {isRunning ? 'Detener' : 'Iniciar Auto'}
              </button>
            </div>
          </div>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
          {/* Sources */}
          <div>
            <div className="bg-white rounded-lg shadow-md p-6">
              <div className="flex items-center justify-between mb-6">
                <h2 className="text-xl font-bold text-[#1a1a1a] flex items-center gap-2">
                  <Globe size={24} className="text-[#bb1919]" />
                  Fuentes de Noticias
                </h2>
                <button className="flex items-center gap-2 px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition">
                  <Settings size={18} />
                  Configurar
                </button>
              </div>

              <div className="space-y-3">
                {sources.map((source) => (
                  <div
                    key={source.id}
                    className="flex items-center justify-between p-4 bg-gray-50 rounded-lg hover:bg-gray-100 transition"
                  >
                    <div className="flex-1">
                      <div className="flex items-center gap-3 mb-1">
                        <h3 className="font-semibold text-gray-900">{source.name}</h3>
                        <span className={`px-2 py-1 text-xs font-bold rounded ${
                          source.enabled
                            ? 'bg-green-100 text-green-700'
                            : 'bg-gray-200 text-gray-600'
                        }`}>
                          {source.enabled ? 'Activa' : 'Inactiva'}
                        </span>
                      </div>
                      <p className="text-xs text-gray-600 mb-2">{source.url}</p>
                      <div className="flex items-center gap-4 text-xs text-gray-500">
                        <span className="flex items-center gap-1">
                          <Clock size={12} />
                          {formatTime(source.lastSync)}
                        </span>
                        <span className="flex items-center gap-1">
                          <Newspaper size={12} />
                          {source.articlesFound} artículos
                        </span>
                      </div>
                    </div>
                    <button
                      onClick={() => toggleSource(source.id)}
                      className={`px-4 py-2 rounded-lg font-medium transition ${
                        source.enabled
                          ? 'bg-red-100 text-red-700 hover:bg-red-200'
                          : 'bg-green-100 text-green-700 hover:bg-green-200'
                      }`}
                    >
                      {source.enabled ? 'Desactivar' : 'Activar'}
                    </button>
                  </div>
                ))}
              </div>

              <button className="w-full mt-4 px-4 py-3 bg-[#bb1919] text-white rounded-lg font-semibold hover:bg-[#990000] transition">
                + Agregar Nueva Fuente
              </button>
            </div>
          </div>

          {/* Generated News */}
          <div>
            <div className="bg-white rounded-lg shadow-md p-6">
              <h2 className="text-xl font-bold text-[#1a1a1a] mb-6 flex items-center gap-2">
                <Newspaper size={24} className="text-[#bb1919]" />
                Noticias Generadas
              </h2>

              <div className="space-y-3">
                {generatedNews.map((news) => (
                  <div
                    key={news.id}
                    className={`p-4 rounded-lg border-2 transition ${
                      news.status === 'approved'
                        ? 'bg-green-50 border-green-200'
                        : news.status === 'rejected'
                        ? 'bg-red-50 border-red-200'
                        : 'bg-white border-gray-200'
                    }`}
                  >
                    <div className="flex items-start justify-between mb-2">
                      <div className="flex-1">
                        <h3 className="font-semibold text-gray-900 mb-1">{news.title}</h3>
                        <div className="flex items-center gap-2 text-xs text-gray-600">
                          <span className="px-2 py-1 bg-gray-100 rounded">{news.source}</span>
                          <span className="px-2 py-1 bg-blue-100 text-blue-700 rounded">
                            {news.category}
                          </span>
                          <span>{formatTime(news.createdAt)}</span>
                        </div>
                      </div>
                      {news.status === 'pending' && (
                        <div className="flex gap-2 ml-3">
                          <button
                            onClick={() => approveNews(news.id)}
                            className="p-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition"
                            title="Aprobar"
                          >
                            <Check size={16} />
                          </button>
                          <button
                            onClick={() => rejectNews(news.id)}
                            className="p-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition"
                            title="Rechazar"
                          >
                            <X size={16} />
                          </button>
                        </div>
                      )}
                      {news.status === 'approved' && (
                        <span className="px-3 py-1 bg-green-600 text-white text-xs font-bold rounded-full">
                          Aprobada
                        </span>
                      )}
                      {news.status === 'rejected' && (
                        <span className="px-3 py-1 bg-red-600 text-white text-xs font-bold rounded-full">
                          Rechazada
                        </span>
                      )}
                    </div>
                  </div>
                ))}
              </div>

              {generatedNews.filter(n => n.status === 'pending').length === 0 && (
                <div className="text-center py-8 text-gray-500">
                  <Newspaper size={48} className="mx-auto mb-3 opacity-30" />
                  <p>No hay noticias pendientes de revisión</p>
                </div>
              )}
            </div>
          </div>
        </div>

        {/* Configuration */}
        <div className="mt-8 bg-white rounded-lg shadow-md p-6">
          <h2 className="text-xl font-bold text-[#1a1a1a] mb-6 flex items-center gap-2">
            <Settings size={24} className="text-[#bb1919]" />
            Configuración Avanzada
          </h2>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            <div>
              <label className="block text-sm font-bold text-gray-700 mb-2">
                Intervalo de Sincronización
              </label>
              <select className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#bb1919] focus:border-transparent">
                <option>Cada 15 minutos</option>
                <option>Cada 30 minutos</option>
                <option>Cada hora</option>
                <option>Cada 2 horas</option>
              </select>
            </div>

            <div>
              <label className="block text-sm font-bold text-gray-700 mb-2">
                Auto-Aprobar Noticias
              </label>
              <select className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#bb1919] focus:border-transparent">
                <option>Desactivado (Revisión manual)</option>
                <option>Solo de fuentes confiables</option>
                <option>Todas las noticias</option>
              </select>
            </div>

            <div>
              <label className="block text-sm font-bold text-gray-700 mb-2">
                Máximo de Noticias por Día
              </label>
              <input
                type="number"
                defaultValue={50}
                className="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[#bb1919] focus:border-transparent"
              />
            </div>
          </div>

          <div className="mt-6 flex justify-end">
            <button className="px-6 py-3 bg-[#bb1919] text-white rounded-lg font-semibold hover:bg-[#990000] transition">
              Guardar Configuración
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};
